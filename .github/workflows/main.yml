name: L4 Testing Milestone
on: push
env:
  PG_DATABASE: wd-todo-test
  PG_USER: postgres
  PG_PASSWORD: postgres
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: ESLint
        uses: sibiraj-s/action-eslint@v3
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          # this environment variable is needed for ESLint github action which is github token I created in githup developer section
          eslint-args: "--ignore-path=.gitignore --quiet"
          extensions: "js,jsx,ts,tsx"
          annotations: true

  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.7
        env:
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          # this environment variable is needed to connect the server with the postgres database which is database username
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          # this environment variable is needed to connect the server with the postgres database which is database password
          # POSTGRES_USER: postgres
          # POSTGRES_PASSWORD: postgres
          POSTGRES_DB: wd-todo-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          clean: true

      - name: Install dependencies
        run: npm ci

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run unit tests
        run: npm test

      - name: Run the app
        id: run-app
        run: |
          npm install
          npx sequelize-cli db:drop
          npx sequelize-cli db:create
          npx sequelize-cli db:migrate
          PORT=3000 npm start &
          sleep 5

      # - name: Run integration tests
      #   run: |
      #     npm install cypress cypress-json-results
      #     npx cypress run --env BASE_URL="http://localhost:3000/"
      - name: Notify on failure
        if: failure()
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.MY_GITHUB_TOKEN }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
